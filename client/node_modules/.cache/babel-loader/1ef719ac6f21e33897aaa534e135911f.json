{"ast":null,"code":"var _jsxFileName = \"/Users/sabrinastevens/Documents/Ecommerce-III/client/src/Components/Slider.jsx\";\n// import React, {Component} from 'react';\n// //Component for background home page slider\n// class Slider extends Component {\n//   //Save images to state so they can be referenced later on with .map()\n//     state = {\n//         images: [\n//         \"https://www.prsguitars.com/images/electrics/s2singlecutshphoto1.jpg\",\n//         \"http://www.fmicassets.com/Damroot/Zoom/10001/9216080060_gtr_cntbdyright_001_nr.png\",\n//         \"https://images.samash.com/sa/T41/T414CERVX-P.fpx?cvt=jpg\",\n//         \"https://www.prsguitars.com/images/electrics/se_245_2018_photo3.jpg\",\n//         \"https://www.fmicassets.com/Damroot/ZoomJpg/10001/0374090557_gtr_cntbdyright_001_nr.jpg\",\n//         \"https://www.fmicassets.com/Damroot/ZoomJpg/10001/0114312762_gtr_cntbdyright_001_nr.jpg\",\n//         \"https://www.prsguitars.com/images/electrics/se_mark_tremonti_2018_photo1.jpg\"\n//         ],\n//         currentIndex: 0,\n//       translateValue: 0\n//     }\n// //Check the value of currentIndex and if zero return nothing(can't go back on the first image) otherwise subtract one from \n// // goToPrevSlide = () => {\n// //     if(this.state.currentIndex === 0)\n// //       return;\n// //     this.setState(prevState => ({\n// //       currentIndex: prevState.currentIndex - 1,\n// //       translateValue: prevState.translateValue + this.slideWidth()\n// //     }))\n// //   }\n// componentDidMount() {\n//   this.timerID = setInterval(() => {\n//       // Exiting the method early if we are at the end of the images array.\n//       //Reset currentIndex and translateValue, so to return to the first image in the array.\n//       if(this.state.currentIndex === this.state.images.length - 1) {\n//           return this.setState({\n//           currentIndex: 0,\n//           translateValue: 0\n//           })\n//       }\n//       // This will not run if it met the \"if\" condition above\n//           this.setState(prevState => ({\n//               currentIndex: prevState.currentIndex + 1,\n//               translateValue: prevState.translateValue + -(this.slideWidth())\n//               }));\n//       }, 3800);\n// }\n// componentWillUnmount() {\n//   clearInterval(this.timerID);\n// }\n// //Helps with transition to the next slide\n// slideWidth = () => {\n//     return document.querySelector('.slide').clientWidth\n// }\n// render() {\n//     return (\n//       <div className=\"slider\">\n//         <div className=\"slider-wrapper\"\n//           style={{\n//             transform: `translateX(${this.state.translateValue}px)`,\n//             transition: 'transform ease-out 0.45s'\n//           }}>\n//             {\n//               this.state.images.map((image, i) => (\n//                 <Slide key={i} image={image} />\n//               ))\n//             }\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// const Slide = ({ image }) => {\n//   const styles = {\n//     backgroundImage:`url(${image})`,\n//     backgroundSize: 'cover',\n//     backgroundRepeat: 'no-repeat',\n//     backgroundPosition: '50% 60%'\n//   }\n//   return <div className=\"slide\" style={styles}></div>\n// }\n// export default Slider;\nimport React, { Component } from 'react'; //Component for background home page slider\n\nclass Slider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [\"https://www.prsguitars.com/images/electrics/s2singlecutshphoto1.jpg\", \"http://www.fmicassets.com/Damroot/Zoom/10001/9216080060_gtr_cntbdyright_001_nr.png\", \"https://images.samash.com/sa/T41/T414CERVX-P.fpx?cvt=jpg\", \"https://www.prsguitars.com/images/electrics/se_245_2018_photo3.jpg\", \"https://www.fmicassets.com/Damroot/ZoomJpg/10001/0374090557_gtr_cntbdyright_001_nr.jpg\", \"https://www.fmicassets.com/Damroot/ZoomJpg/10001/0114312762_gtr_cntbdyright_001_nr.jpg\", \"https://www.prsguitars.com/images/electrics/se_mark_tremonti_2018_photo1.jpg\"],\n      currentIndex: 0,\n      translateValue: 0\n    };\n\n    this.goToPrevSlide = () => {\n      if (this.state.currentIndex === 0) return;\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex - 1,\n        translateValue: prevState.translateValue + this.slideWidth()\n      }));\n    };\n\n    this.goToNextSlide = () => {\n      // Exiting the method early if we are at the end of the images array.\n      //Reset currentIndex and translateValue, so to return to the first image in the array.\n      if (this.state.currentIndex === this.state.images.length - 1) {\n        return this.setState({\n          currentIndex: 0,\n          translateValue: 0\n        });\n      } // This will not run if it met the \"if\" condition above\n\n\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex + 1,\n        translateValue: prevState.translateValue + -this.slideWidth()\n      }));\n    };\n\n    this.slideWidth = () => {\n      return document.querySelector('.slide').clientWidth;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-wrapper\",\n      style: {\n        transform: \"translateX(\".concat(this.state.translateValue, \"px)\"),\n        transition: 'transform ease-out 0.45s'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.images.map((image, i) => React.createElement(Slide, {\n      key: i,\n      image: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(LeftArrow, {\n      goToPrevSlide: this.goToPrevSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(RightArrow, {\n      goToNextSlide: this.goToNextSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Slide = ({\n  image\n}) => {\n  const styles = {\n    backgroundImage: \"linear-gradient(rgba(50, 50, 50, 0.3), rgba(50, 50, 50, 0.3)), url(\".concat(image, \")\"),\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: '50% 60%'\n  };\n  return React.createElement(\"div\", {\n    className: \"slide\",\n    style: styles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  });\n};\n\nconst LeftArrow = props => {\n  return React.createElement(\"div\", {\n    className: \"backArrow arrow\",\n    onClick: props.goToPrevSlide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"arrow-image-left\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }));\n};\n\nconst RightArrow = props => {\n  return React.createElement(\"div\", {\n    className: \"nextArrow arrow\",\n    onClick: props.goToNextSlide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"arrow-image-right\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }));\n};\n\nexport default Slider;","map":{"version":3,"sources":["/Users/sabrinastevens/Documents/Ecommerce-III/client/src/Components/Slider.jsx"],"names":["React","Component","Slider","state","images","currentIndex","translateValue","goToPrevSlide","setState","prevState","slideWidth","goToNextSlide","length","document","querySelector","clientWidth","render","transform","transition","map","image","i","Slide","styles","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","LeftArrow","props","RightArrow"],"mappings":"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","sourcesContent":["// import React, {Component} from 'react';\n// //Component for background home page slider\n// class Slider extends Component {\n//   //Save images to state so they can be referenced later on with .map()\n//     state = {\n//         images: [\n//         \"https://www.prsguitars.com/images/electrics/s2singlecutshphoto1.jpg\",\n//         \"http://www.fmicassets.com/Damroot/Zoom/10001/9216080060_gtr_cntbdyright_001_nr.png\",\n//         \"https://images.samash.com/sa/T41/T414CERVX-P.fpx?cvt=jpg\",\n//         \"https://www.prsguitars.com/images/electrics/se_245_2018_photo3.jpg\",\n//         \"https://www.fmicassets.com/Damroot/ZoomJpg/10001/0374090557_gtr_cntbdyright_001_nr.jpg\",\n//         \"https://www.fmicassets.com/Damroot/ZoomJpg/10001/0114312762_gtr_cntbdyright_001_nr.jpg\",\n//         \"https://www.prsguitars.com/images/electrics/se_mark_tremonti_2018_photo1.jpg\"\n//         ],\n//         currentIndex: 0,\n//       translateValue: 0\n//     }\n\n// //Check the value of currentIndex and if zero return nothing(can't go back on the first image) otherwise subtract one from \n// // goToPrevSlide = () => {\n// //     if(this.state.currentIndex === 0)\n// //       return;\n    \n// //     this.setState(prevState => ({\n// //       currentIndex: prevState.currentIndex - 1,\n// //       translateValue: prevState.translateValue + this.slideWidth()\n// //     }))\n// //   }\n\n// componentDidMount() {\n//   this.timerID = setInterval(() => {\n//       // Exiting the method early if we are at the end of the images array.\n//       //Reset currentIndex and translateValue, so to return to the first image in the array.\n//       if(this.state.currentIndex === this.state.images.length - 1) {\n//           return this.setState({\n//           currentIndex: 0,\n//           translateValue: 0\n//           })\n//       }\n          \n//       // This will not run if it met the \"if\" condition above\n      \n//           this.setState(prevState => ({\n//               currentIndex: prevState.currentIndex + 1,\n//               translateValue: prevState.translateValue + -(this.slideWidth())\n//               }));\n//       }, 3800);\n// }\n// componentWillUnmount() {\n//   clearInterval(this.timerID);\n// }\n// //Helps with transition to the next slide\n// slideWidth = () => {\n//     return document.querySelector('.slide').clientWidth\n// }\n\n// render() {\n//     return (\n//       <div className=\"slider\">\n\n//         <div className=\"slider-wrapper\"\n//           style={{\n//             transform: `translateX(${this.state.translateValue}px)`,\n//             transition: 'transform ease-out 0.45s'\n//           }}>\n//             {\n//               this.state.images.map((image, i) => (\n//                 <Slide key={i} image={image} />\n//               ))\n//             }\n//         </div>\n\n//       </div>\n//     );\n//   }\n// }\n\n// const Slide = ({ image }) => {\n//   const styles = {\n//     backgroundImage:`url(${image})`,\n//     backgroundSize: 'cover',\n//     backgroundRepeat: 'no-repeat',\n//     backgroundPosition: '50% 60%'\n//   }\n//   return <div className=\"slide\" style={styles}></div>\n// }\n\n// export default Slider;\n\nimport React, {Component} from 'react';\n//Component for background home page slider\nclass Slider extends Component {\n  //Save images to state so they can be referenced later on with .map()\n    state = {\n        images: [\n        \"https://www.prsguitars.com/images/electrics/s2singlecutshphoto1.jpg\",\n        \"http://www.fmicassets.com/Damroot/Zoom/10001/9216080060_gtr_cntbdyright_001_nr.png\",\n        \"https://images.samash.com/sa/T41/T414CERVX-P.fpx?cvt=jpg\",\n        \"https://www.prsguitars.com/images/electrics/se_245_2018_photo3.jpg\",\n        \"https://www.fmicassets.com/Damroot/ZoomJpg/10001/0374090557_gtr_cntbdyright_001_nr.jpg\",\n        \"https://www.fmicassets.com/Damroot/ZoomJpg/10001/0114312762_gtr_cntbdyright_001_nr.jpg\",\n        \"https://www.prsguitars.com/images/electrics/se_mark_tremonti_2018_photo1.jpg\"\n        ],\n        currentIndex: 0,\n      translateValue: 0\n    }\n\n//Check the value of currentIndex and if zero return nothing(can't go back on the first image) otherwise subtract one from \ngoToPrevSlide = () => {\n    if(this.state.currentIndex === 0)\n      return;\n    \n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex - 1,\n      translateValue: prevState.translateValue + this.slideWidth()\n    }))\n  }\ngoToNextSlide = () => {\n// Exiting the method early if we are at the end of the images array.\n//Reset currentIndex and translateValue, so to return to the first image in the array.\nif(this.state.currentIndex === this.state.images.length - 1) {\n    return this.setState({\n    currentIndex: 0,\n    translateValue: 0\n    })\n}\n    \n// This will not run if it met the \"if\" condition above\n    this.setState(prevState => ({\n        currentIndex: prevState.currentIndex + 1,\n        translateValue: prevState.translateValue + -(this.slideWidth())\n        }));\n}\n//Helps with transition to the next slide\nslideWidth = () => {\n    return document.querySelector('.slide').clientWidth\n}\n\nrender() {\n    return (\n      <div className=\"slider\">\n\n        <div className=\"slider-wrapper\"\n          style={{\n            transform: `translateX(${this.state.translateValue}px)`,\n            transition: 'transform ease-out 0.45s'\n          }}>\n            {\n              this.state.images.map((image, i) => (\n                <Slide key={i} image={image} />\n              ))\n            }\n        </div>\n\n        <LeftArrow\n         goToPrevSlide={this.goToPrevSlide}\n        />\n\n        <RightArrow\n         goToNextSlide={this.goToNextSlide}\n        />\n      </div>\n    );\n  }\n}\n\nconst Slide = ({ image }) => {\n  const styles = {\n    backgroundImage:`linear-gradient(rgba(50, 50, 50, 0.3), rgba(50, 50, 50, 0.3)), url(${image})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: '50% 60%'\n  }\n  return <div className=\"slide\" style={styles}></div>\n}\nconst LeftArrow = (props) => {\n  return (\n    <div className=\"backArrow arrow\" onClick={props.goToPrevSlide}>\n      <i className=\"arrow-image-left\" aria-hidden=\"true\"></i>\n    </div>\n  );\n}\nconst RightArrow = (props) => {\n  return (\n    <div className=\"nextArrow arrow\" onClick={props.goToNextSlide}>\n      <i className=\"arrow-image-right\" aria-hidden=\"true\"></i>\n    </div>\n  );\n}\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}