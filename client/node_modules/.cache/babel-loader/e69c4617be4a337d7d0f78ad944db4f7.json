{"ast":null,"code":"var _jsxFileName = \"/Users/sabrinastevens/Documents/Ecommerce-III/client/src/Components/Form.jsx\";\nimport React from 'react';\nimport useForm from 'react-hook-form'; //Component for form on contact page. Used React-Hook-Form for the validation. \n\nconst Form = () => {\n  //Deconstructing the necessary parts of useForm() from react-hook-form\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors; //logging the data from inputs\n\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"cmxform\",\n    id: \"commentForm\",\n    onSubmit: handleSubmit(onSubmit),\n    method: \"get\",\n    action: \"#\",\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row mt-4 valid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"first-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"first-name\",\n    name: \"firstname\",\n    minLength: \"2\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), errors.firstname && errors.firstname.type === 'required' && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Your First Name is required\"), errors.firstname && errors.firstname.type === 'minLength' && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Your First Name Must Be Longer than 2 Characters\")), React.createElement(\"div\", {\n    className: \"row mt-4 valid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"last-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"last-name\",\n    name: \"lastname\",\n    minLength: \"2\",\n    type: \"text\",\n    placeholder: \"Last Name\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), errors.lastname && errors.lastname.type === 'required' && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Your Last Name is required\"), errors.lastname && errors.lastname.type === 'minLength' && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Your Last Name Must Be Longer than 2 Characters\"))), React.createElement(\"div\", {\n    className: \"mt-4 valid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"E-mail\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"example@email.com\",\n    ref: register({\n      required: true,\n      pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\n    }),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), errors.email && errors.email.type === 'required' && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Your E-mail is required\"), errors.email && errors.email.type === 'pattern' && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Please Enter a Valid E-mail address\")), React.createElement(\"div\", {\n    className: \"mt-4 valid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Comments/Feedback\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"comment\",\n    name: \"comment\",\n    placeholder: \"Please leave us a comment!\",\n    ref: register({\n      required: true,\n      minLength: 5\n    }),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), errors.comment && errors.comment.type === 'required' && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"A Comment is Required\"), errors.comment && errors.comment.type === 'minLength' && React.createElement(\"span\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Your Comment Must Be At Least 5 Characters\")), React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"submit btn-info btn mb-2\",\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/sabrinastevens/Documents/Ecommerce-III/client/src/Components/Form.jsx"],"names":["React","useForm","Form","register","handleSubmit","errors","onSubmit","data","console","log","required","minLength","firstname","type","lastname","pattern","email","comment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useForm from 'react-hook-form'\n//Component for form on contact page. Used React-Hook-Form for the validation. \nconst Form = () => {\n  //Deconstructing the necessary parts of useForm() from react-hook-form\n  const { register, handleSubmit, errors } = useForm()\n  //logging the data from inputs\n  const onSubmit = data => { console.log(data) }\n        return (\n<div className=\"form-container\">\n<form className=\"cmxform\" id=\"commentForm\" onSubmit={handleSubmit(onSubmit)} method=\"get\" action=\"#\" noValidate>\n<div className=\"form-group\">\n  <div>\n    <div className=\"row mt-4 valid\">\n    <label htmlFor=\"first-name\">First Name</label>\n    {/* React-Hook-Form uses the ref to set what is required to validate */}\n    <input className=\"form-control\" id=\"first-name\" name=\"firstname\" minLength=\"2\" type=\"text\" placeholder=\"First Name\" ref={register({ required: true, minLength: 2 })} required /> \n    {/* These are the messages that show up if a certain part of validation is not met */}\n    {errors.firstname && errors.firstname.type === 'required' && <span className=\"text-danger\">Your First Name is required</span>}\n    {errors.firstname && errors.firstname.type === 'minLength' && <span className=\"text-danger\">Your First Name Must Be Longer than 2 Characters</span>}\n    </div>\n  <div className=\"row mt-4 valid\">\n      <label htmlFor=\"last-name\">Last Name</label>\n      <input className=\"form-control\" id=\"last-name\" name=\"lastname\" minLength=\"2\" type=\"text\" placeholder=\"Last Name\" ref={\n    register({ required: true, minLength: 2})} required/> \n      {errors.lastname && errors.lastname.type === 'required' && <span className=\"text-danger\">Your Last Name is required</span>}\n      {errors.lastname && errors.lastname.type === 'minLength' && <span className=\"text-danger\">Your Last Name Must Be Longer than 2 Characters</span>}\n      </div>\n    </div>\n  <div className=\"mt-4 valid\">\n    <label htmlFor=\"email\">E-mail</label>\n    <input className=\"form-control\" id=\"email\" type=\"email\" name=\"email\" placeholder=\"example@email.com\" ref={register({required: true, pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/})} required />\n    {errors.email && errors.email.type === 'required' && <span className=\"text-danger\">Your E-mail is required</span>}\n      {errors.email && errors.email.type === 'pattern' && <span className=\"text-danger\">Please Enter a Valid E-mail address</span>}\n  </div>\n  <div className=\"mt-4 valid\">\n    <label htmlFor=\"comment\">Comments/Feedback</label>\n    <textarea className=\"form-control\" id=\"comment\" name=\"comment\" placeholder=\"Please leave us a comment!\" ref={register({ required: true, minLength: 5 })} required></textarea>\n    {errors.comment && errors.comment.type === 'required' && <span className=\"text-danger\">A Comment is Required</span>}\n      {errors.comment && errors.comment.type === 'minLength' && <span className=\"text-danger\">Your Comment Must Be At Least 5 Characters</span>}\n  </div>\n  <div className=\"text-center mt-4\">\n      <input className=\"submit btn-info btn mb-2\" type=\"submit\" value=\"Submit\" />\n  </div>\n</div>\n</form>\n</div>\n        )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}